<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>be.personify.iam</groupId>
	<artifactId>personify-scim-server</artifactId>
	<version>2.0.0.RELEASE</version>
	<packaging>jar</packaging>
	<licenses>
		<license>
			<name>MIT</name>
		</license>
	</licenses>

	<url>https://www.personify.be</url>
	<scm>
		<url>https://bitbucket.org/wouter29/?visibility=public</url>
		<connection>scm:git:ssh://git@bitbucket.org:wouter29/personify-scim-server.git</connection>
	</scm>

	<name>personify-scim-server</name>
	<description>implementation for the scim v2 protocol in java supporting : 
	- create, get, put, delete, search, patch ( with attributes and excludedAttributes )
	- bulk with circular reference processing, maxOperations and maxPayloadSize
	- paging
	- filtering
	- discovery
	- schema validation
	- uniqueness constraint validation
	- authentication : basic and OAUTH bearer token ( with roles )
	- bearer token endpoint created and verified with Forgerock IDM SCIM connector (compatible)
	- /ME endpoint
	</description>

	<organization>
		<name>personify</name>
		<url>https://www.personify.be</url>
	</organization>

	<developers>
		<developer>
			<name>Wouter Van der Beken</name>
			<email>wouter@mogo.be</email>
		</developer>
		<developer>
			<name>Steve Jerman</name>
			<email>steve.jerman@cloudspot.com</email>
		</developer>
	</developers>

	<inceptionYear>2019</inceptionYear>


	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		
		<spring-boot-starter-version>2.7.5</spring-boot-starter-version>
		<personify.provisioning.version>1.4.4.RELEASE</personify.provisioning.version>
		<junit.version>4.13.2</junit.version>
		<postgress.version>42.3.4</postgress.version>
		<mysql-connector.version>8.0.28</mysql-connector.version>
		<couchbase.client>3.2.6</couchbase.client>
		<spring-security-crypto>5.6.3</spring-security-crypto>
		<mongo-java-driver>3.12.10</mongo-java-driver>
		<orientdb-core>3.2.5</orientdb-core>
	</properties>


	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>${spring-boot-starter-version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<version>${spring-boot-starter-version}</version>
		</dependency>

		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			 <version>5.8.2</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
			<version>${spring-boot-starter-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-crypto</artifactId>
			<version>${spring-security-crypto}</version>
		</dependency>

		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongo-java-driver}</version>
		</dependency>

		<dependency>
			<groupId>be.personify.iam</groupId>
			<artifactId>personify-provisioning</artifactId>
			<version>${personify.provisioning.version}</version>
		</dependency>
		
		
		<dependency>
    		<groupId>org.postgresql</groupId>
    		<artifactId>postgresql</artifactId>
    		<version>${postgress.version}</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector.version}</version>
		</dependency>

		<!--  they first have top check their dependencies, jar becomes too big includes graal stuuf -->
<!-- 		<dependency> -->
<!-- 			<groupId>com.orientechnologies</groupId> -->
<!-- 			<artifactId>orientdb-core</artifactId> -->
<!-- 			<version>${orientdb-core}</version> -->
<!-- 			<exclusions> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>com.fasterxml.jackson.core</groupId> -->
<!-- 					<artifactId>jackson-core</artifactId> -->
<!-- 				</exclusion> -->
<!-- 			</exclusions> -->
<!-- 			<scope>provided</scope> -->
<!-- 		</dependency> -->
		
		
		<dependency>
			<groupId>com.orientechnologies</groupId>
			<artifactId>orientdb-core</artifactId>
			<version>3.1.5</version>
		</dependency>
		

		<dependency>
			<groupId>com.couchbase.client</groupId>
			<artifactId>java-client</artifactId>
			<version>${couchbase.client}</version>
		</dependency>


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>




	</dependencies>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>




	<build>
		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot-starter-version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.7</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<configuration>
					<source>8</source>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
<!-- 			<plugin> -->
<!--               <groupId>org.owasp</groupId> -->
<!--               <artifactId>dependency-check-maven</artifactId> -->
<!--               <version>6.5.1</version> -->
<!--               <executions> -->
<!--                   <execution> -->
<!--                       <goals> -->
<!--                           <goal>check</goal> -->
<!--                       </goals> -->
<!--                   </execution> -->
<!--               </executions> -->
<!--             </plugin> -->



<!-- 			<plugin> -->
<!-- 				<groupId>com.spotify</groupId> -->
<!-- 				<artifactId>dockerfile-maven-plugin</artifactId> -->
<!-- 				<version>1.4.13</version> -->
<!-- 				<executions> -->
<!-- 					<execution> -->
<!-- 						<id>default</id> -->
<!-- 						<goals> -->
<!-- 							<goal>build</goal> -->
<!-- 							<goal>push</goal> -->
<!-- 						</goals> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
<!-- 				<configuration> -->
<!-- 					<repository>personify/${project.artifactId}</repository> -->
<!-- 					<tag>${project.version}</tag> -->
<!-- 					<buildArgs> -->
<!-- 						<JAR_FILE>${project.build.finalName}.jar</JAR_FILE> -->
<!-- 					</buildArgs> -->
<!-- 				</configuration> -->
<!-- 			</plugin> -->

		</plugins>
	</build>


</project>